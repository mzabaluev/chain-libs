name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  update_deps:
    name: Update dependencies
    runs-on: ubuntu-latest
    outputs:
      crates-io-index-head: ${{ steps.ls-crates-io-index.outputs.head }}
    steps:

      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - id: ls-crates-io-index
        name: Get head commit hash of crates.io registry index
        shell: bash
        run: |
          commit=$(
            git ls-remote --heads https://github.com/rust-lang/crates.io-index.git master |
            cut -f 1
          )
          echo "$commit"
          echo "::set-output name=head::$commit"

      - name: Cache cargo registry index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry/index
          key: cargo-index-v2-${{ steps.ls-crates-io-index.outputs.head }}
          restore-keys: |
            cargo-index-v2-

      - name: Generate Cargo.lock
        run: cargo generate-lockfile

      - id: cache-deps
        name: Cache dependency crates
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry/cache
          key: cargo-deps-v2-${{ hashFiles('Cargo.lock') }}

      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        name: Fetch dependencies
        run: cargo fetch --locked

      - name: Upload Cargo.lock
        uses: actions/upload-artifact@v2
        with:
          name: lockfile
          path: Cargo.lock

  test:
    name: Test
    needs: update_deps
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        toolchain: [stable]
        mode: ['', '--release']
        include: []
          # Temporarily disabled due to https://github.com/rust-lang/cargo/issues/8351
          # - os: ubuntu-latest
          #   toolchain: nightly
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      CARGO_INCREMENTAL: 0
    steps:

      - uses: actions/checkout@v2

      - name: Download Cargo.lock
        uses: actions/download-artifact@v2
        with:
          name: lockfile

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
          override: true

      # https://github.com/actions/virtual-environments/issues/895
      # https://github.com/actions/virtual-environments/issues/936
      - if: ${{ runner.os == 'Windows' }}
        name: Clean up cargo registry files
        run: rm -r -fo $env:UserProfile\.cargo\registry

      - name: Restore cargo registry index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry/index
          key: cargo-index-v2-${{ needs.update-deps.outputs.crates-io-index-head }}

      - name: Restore dependency crates
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry/cache
          key: cargo-deps-v2-${{ hashFiles('Cargo.lock') }}

      - name: Build
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --all-targets ${{ matrix.mode }} --locked

      - name: Run tests
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: ${{ matrix.mode }} --locked

  lints:
    name: Lints
    needs: update_deps
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Download Cargo.lock
        uses: actions/download-artifact@v2
        with:
          name: lockfile

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy
          override: true

      - name: Print rustfmt version
        run: rustfmt --version

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: -- --check

      - name: Restore cargo registry index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry/index
          key: cargo-index-v2-${{ needs.update-deps.outputs.crates-io-index-head }}

      - name: Restore dependency crates
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry/cache
          key: cargo-deps-v2-${{ hashFiles('Cargo.lock') }}

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: -- -D warnings
